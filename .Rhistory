rank_long %>%
filter(Breed == "Retrievers (Labrador)"|Breed == "French Bulldogs"|Breed == "German Shepherd Dogs"|Breed == "Retrievers (Golden)"|Breed == "Bulldogs"|Breed == "Poodles"|Breed == "Beagles"|Breed == "Rottweilers"|Breed == "Pointers (German Shorthaired)"|Breed == "Dachshunds") %>%
ggplot(aes(x=year, y=value, group=Breed, color=Breed)) +
geom_line(binwidth=1)
library(tidyverse)
library(tidymodels)
library(dsbox)
library(stringr)
breed_traits <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-02-01/breed_traits.csv')
trait_description <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-02-01/trait_description.csv')
breed_rank_all <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-02-01/breed_rank.csv')
rank_long <- breed_rank_all %>%
select(-links, -Image) %>%
pivot_longer(-Breed, "year") %>%
mutate(value = as.numeric(value))
rank_long <- rank_long %>%
mutate(year = str_remove(year, " Rank")) %>%
mutate(year = as.numeric(year))
rank_long %>%
filter(year==2020 & value <= 10 & value >=1)
2020top10 <- rank_long %>%
top10in2020 <- rank_long %>%
filter(year==2020 & value <= 10 & value >=1)
top10 <- left_join(top10in2020, rank_long)
View(top10)
top10 <- left_join(top10in2020, rank_long, Breed)
top10 <- left_join(top10in2020, rank_long, by=Breed)
top10 <- left_join(top10in2020, rank_long, "Breed")
View(top10)
View(top10in2020)
top10 <- left_join(top10in2020, rank_long, "year")
View(top10)
top10 <- left_join(top10in2020, rank_long, "Breed")
View(top10)
top10 <- bind_rows(top10in2020, rank_long)
View(top10)
top10 <- inner_join(top10in2020, rank_long)
View(top10)
top10 <- right_join(top10in2020, rank_long)
View(top10)
top10 <- semi_join(top10in2020, rank_long)
View(top10)
top10 <- anti_join(top10in2020, rank_long)
top10 <- bind_cols(top10in2020, rank_long)
top10 <- left_join(top10in2020, rank_long)
View(top10)
top10 <- left_join(top10in2020, rank_long, "Breed")
View(top10)
top10 <- left_join(top10in2020, rank_long, "Breed") %>%
group_by(Breed)
top10 <- left_join(top10in2020, rank_long, "Breed") %>%
bind_cols(year.x, year.y)
top10 <- left_join(top10in2020, rank_long, "Breed") %>%
distinct
View(top10)
View(breed_rank_all)
rank_long %>%
filter(Breed == "Retrievers (Labrador)"|Breed == "French Bulldogs"|Breed == "German Shepherd Dogs"|Breed == "Retrievers (Golden)"|Breed == "Bulldogs"|Breed == "Poodles"|Breed == "Beagles"|Breed == "Rottweilers"|Breed == "Pointers (German Shorthaired)"|Breed == "Dachshunds") %>%
ggplot(aes(x=year, y=value, group=Breed, color=Breed)) +
geom_line(binwidth=1)
View(breed_rank_all)
top10 <- semi_join(rank_long, top10in2020, "Breed")
rank_long %>%
filter(Breed == "Retrievers (Labrador)"|Breed == "French Bulldogs"|Breed == "German Shepherd Dogs"|Breed == "Retrievers (Golden)"|Breed == "Bulldogs"|Breed == "Poodles"|Breed == "Beagles"|Breed == "Rottweilers"|Breed == "Pointers (German Shorthaired)"|Breed == "Dachshunds") %>%
ggplot(aes(x=year, y=value, group=Breed, color=Breed)) +
geom_point() +
geom_line()
staff_long %>%
ggplot(aes(x = year, y = value, group = faculty_type, color = faculty_type)) +
geom_line() +
labs(title = "Proportions of each type of instructional staff", subtitle = "By year", x = "Year", y = "Proportions", color = "Faculty type")
rank_long %>%
filter(Breed == "Retrievers (Labrador)"|Breed == "French Bulldogs"|Breed == "German Shepherd Dogs"|Breed == "Retrievers (Golden)"|Breed == "Bulldogs"|Breed == "Poodles"|Breed == "Beagles"|Breed == "Rottweilers"|Breed == "Pointers (German Shorthaired)"|Breed == "Dachshunds") %>%
ggplot(aes(x=year, y=value, group=Breed, color=Breed)) +
geom_point() +
geom_line() +
scale_x_continuous(breaks=seq(2013,2020,1)) +
scale_y_continuous(breaks=seq(1,10,1))
rank_long %>%
filter(Breed == "Retrievers (Labrador)"|Breed == "French Bulldogs"|Breed == "German Shepherd Dogs"|Breed == "Retrievers (Golden)"|Breed == "Bulldogs"|Breed == "Poodles"|Breed == "Beagles"|Breed == "Rottweilers"|Breed == "Pointers (German Shorthaired)"|Breed == "Dachshunds") %>%
ggplot(aes(x=year, y=value, group=Breed, color=Breed)) +
geom_point() +
geom_line() +
scale_x_continuous(breaks=seq(2013,2020,1)) +
scale_y_continuous(breaks=seq(1,13,1))
top10 %>%
ggplot(aes(x=year, y=value, group=Breed, color=Breed)) +
geom_point() +
geom_line() +
scale_x_continuous(breaks=seq(2013,2020,1)) +
scale_y_continuous(breaks=seq(1,13,1)) +
labs(title="2020's Top 10 Dog Breeds' Ranking Over Time (2013-2020)", subtitle="By year", y=ranking)
top10 %>%
ggplot(aes(x=year, y=value, group=Breed, color=Breed)) +
geom_point() +
geom_line() +
scale_x_continuous(breaks=seq(2013,2020,1)) +
scale_y_continuous(breaks=seq(1,13,1)) +
labs(title="2020's Top 10 Dog Breeds' Ranking Over Time (2013-2020)", subtitle="By year", y="ranking")
install.packages("Hmisc")
library("Hmisc")
#returns a correlaton matrix for
cor <- rcorr(as.matrix(breed_traits))
#returns a correlaton matrix for
cor <- rcorr(as.matrix(breed_traits))
#returns a correlaton matrix for
cor<-cor(breed_traits)
#returns a correlation matrix for
cor<-rcorr(as.matrix(breed_traits$`Affectionate With Family`:breed_traits$`Mental Stimulation Needs`))
#returns a correlation matrix for
cor<-rcorr(as.matrix(breed_traits[,c(2:17)]))
breed_traits[,c(2:17)]
breed_traits[,c(1:17)]
breed_traits[,c(-2)]
breed_traits[,c(-1, -8, -9)]
breed_traits[c(1:5)]
breed_traits[1,]
View(breed_rank_all)
View(rank_long)
rank <- breed_rank_all %>%
order(-"2020 Rank")
rank <- breed_rank_all %>%
order(-"2020 Rank",)
rank <- breed_rank_all %>%
order(-'2020 Rank')
rank <- breed_rank_all %>%
order(-'2020 Rank',)
rank <- breed_rank_all %>%
order(-'2020 Rank',)
rank <- breed_rank_all %>%
order(-'2020 Rank',)
rank <- breed_rank_all %>%
order('2020 Rank')
#returns a correlation matrix for
cor<-rcorr(as.matrix(breed_traits[,c(-1,-8,-9)]))
#returns a correlation matrix for
cor<-rcorr(as.matrix(breed_traits[,c(-1,-8,-9)]))
cor
#returns a correlation matrix for
cor<-rcorr(as.matrix(breed_traits[,c(-1,-8,-9)]))
flattenCorrMatrix(cor$r, cor$P)
library(Hmisc)
library(Hmisc)
library('Hmisc')
#returns a correlation matrix for
cor<-rcorr(as.matrix(breed_traits[,c(-1,-8,-9)]))
flattenCorrMatrix(cor$r, cor$P)
library("Hmisc")
#returns a correlation matrix for
cor<-rcorr(as.matrix(breed_traits[,c(-1,-8,-9)]))
flattenCorrMatrix(cor$r, cor$P)
